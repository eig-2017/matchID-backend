recipes:
  matching:
    steps:
      - eval:
        #workaround to being backported to french_name_normalization
        - matchid_name_last_match: next(s for s in matchid_name_last if s) if (type(matchid_name_last)==list) else matchid_name_last
        - matchid_name_first_match: next(s for s in matchid_name_first if s) if (type(matchid_name_first)==list) else matchid_name_first
      - join: 
          type: elasticsearch
          dataset: matchid
          query:
            size: 10
            query:
              bool:
                must:
                  - bool:
                      should:
                        - bool:
                            must:
                              - match:
                                  matchid_name_match:
                                    query: matchid_name_last_match
                                    fuzziness: auto
                              - match:
                                  matchid_date_birth_str: matchid_date_birth_str
                        - bool:
                            must:
                              - match:
                                  matchid_name_match: matchid_name_last_match
                              - match:
                                  matchid_date_birth_str: 
                                    query: matchid_date_birth_str
                                    fuzziness: 1
                      minimum_should_match: 1
                should:
                  - bool:
                      should:
                        - span_first:
                            match:
                              span_term:
                                  matchid_name_match: matchid_name_last_match
                            end: 1
                        - match:
                            matchid_name_match: matchid_name_first_match
                        - match:
                            matchid_location_city: matchid_location_city
                        - match:
                            matchid_location_country: matchid_location_country
                      minimum_should_match: 2
      - scoring:
      #- diff:
      - keep:
          select: (.*id|.*diff.*|matchid_hit_score($|_[a-z]*))$
          where: matchid_hit_score>0.1
      # - pause:
      #     head: 500
          # select: (.*diff.*|matchid_hit_score($|_[a-z]*))$
  scoring:
    steps:
      - scoring_lev:
  scoring_lev:
    steps:   
      - eval:
        #scoring names : compute nomalized levenshtein distance and common words btw arrays of names : []x[]
        - matchid_hit_freq: max(matchid_name_first_freq,hit_matchid_name_first_freq,matchid_name_last_freq,hit_matchid_name_last_freq)*matchid_hit_matches_unfiltered
        - matchid_hit_score_name_lv_nn: max(levenshtein_norm(matchid_name_last,hit_matchid_name_last),levenshtein_norm(matchid_name_last_match,hit_matchid_name_last_match))
        - matchid_hit_score_name_lv_pp: max(levenshtein_norm(matchid_name_first_match,hit_matchid_name_first_match),levenshtein_norm(matchid_name_first,hit_matchid_name_first))   
        - matchid_hit_score_name_lv_np: round(levenshtein_norm(matchid_name_first,hit_matchid_name_last)*levenshtein_norm(matchid_name_last,hit_matchid_name_first),2)   
        - matchid_hit_score_name_tokens: round(len([x for x in matchid_name_tokens if x in hit_matchid_name_tokens])*1.0 /max(1,min(len(matchid_name_tokens),len(hit_matchid_name_tokens))),2)  
        - matchid_hit_score_name: round(max(matchid_hit_score_name_lv_nn*matchid_hit_score_name_lv_pp,0.7*matchid_hit_score_name_lv_np,0.7*matchid_hit_score_name_tokens),2)
         #scoring location
        - matchid_hit_score_location_lv_city: levenshtein_norm(matchid_location_city,hit_matchid_location_city)      
        - matchid_hit_score_location_lv_country: levenshtein_norm(matchid_location_country,hit_matchid_location_country)      
        - matchid_hit_score_location_citycode_history: 1 if (len([x for x in matchid_location_citycode_history if x in hit_matchid_location_citycode_history])>0) else 0      
        - matchid_hit_score_location_citycode: 1 if ((len(matchid_location_citycode)>0) & (matchid_location_citycode == hit_matchid_location_citycode)) else 0
        - matchid_hit_score_location_depcode: 1 if (matchid_location_depcode == hit_matchid_location_depcode) else 0      
        - matchid_hit_score_location_countrycode: 1 if (matchid_location_countrycode == hit_matchid_location_countrycode) else 0   
        - matchid_hit_distance: distance(matchid_location_city_geopoint_2d,hit_matchid_location_city_geopoint_2d)
        - matchid_hit_score_location_distance: 0 if (matchid_hit_distance == "") else round(100*40/(40+matchid_hit_distance))/100
        # - matchid_hit_score_location_global: 0.5*max(matchid_hit_score_location_citycode,matchid_hit_score_location_lv_city)+0.25*max(matchid_hit_score_location_depcode,matchid_hit_score_location_lv_department)+0.25*max(matchid_hit_score_location_countrycode,matchid_hit_score_location_lv_country)   
        - matchid_hit_score_location: round(0.5*max(matchid_hit_score_location_citycode,matchid_hit_score_location_citycode_history,matchid_hit_score_location_lv_city,matchid_hit_score_location_distance)+0.25*matchid_hit_score_location_depcode+0.25*max(matchid_hit_score_location_countrycode,matchid_hit_score_location_lv_country),2)
        #scoring date
        - matchid_hit_score_date: round(levenshtein_norm(matchid_date_birth_str,hit_matchid_date_birth_str)*(0.9 if re.search('0101$',matchid_date_birth_str) else 1),2) 
        - matchid_hit_score_sex: 1 if (str(matchid_sex) == str(hit_matchid_sex)) else 0  
        - matchid_hit_score: round(1.0*matchid_hit_score_name*matchid_hit_score_date*(0.2+0.8*matchid_hit_score_location)*(0.5*(1.0+matchid_hit_score_sex)),2)
        - scoring_version: str("scoring_lev")
  scoring_jw:
    steps:   
      - eval:
        #scoring names : compute nomalized levenshtein distance and common words btw arrays of names : []x[]
        - matchid_hit_freq: max(matchid_name_first_freq,hit_matchid_name_first_freq,matchid_name_last_freq,hit_matchid_name_last_freq)*matchid_hit_matches_unfiltered
        - matchid_hit_score_name_lv_nn: max(jw(matchid_name_last,hit_matchid_name_last),jw(matchid_name_last_match,hit_matchid_name_last_match))
        - matchid_hit_score_name_lv_pp: max(jw(matchid_name_first_match,hit_matchid_name_first_match),jw(matchid_name_first,hit_matchid_name_first))   
        - matchid_hit_score_name_lv_np: round(jw(matchid_name_first,hit_matchid_name_last)*jw(matchid_name_last,hit_matchid_name_first),2)   
        - matchid_hit_score_name_tokens: round(len([x for x in matchid_name_tokens if x in hit_matchid_name_tokens])*1.0 /max(1,min(len(matchid_name_tokens),len(hit_matchid_name_tokens))),2)  
        - matchid_hit_score_name: round(max(matchid_hit_score_name_lv_nn*matchid_hit_score_name_lv_pp,0.7*matchid_hit_score_name_lv_np,0.7*matchid_hit_score_name_tokens),2)
         #scoring location
        - matchid_hit_score_location_lv_city: jw(matchid_location_city,hit_matchid_location_city)      
        - matchid_hit_score_location_lv_country: jw(matchid_location_country,hit_matchid_location_country)      
        - matchid_hit_score_location_citycode_history: 1 if (len([x for x in matchid_location_citycode_history if x in hit_matchid_location_citycode_history])>0) else 0      
        - matchid_hit_score_location_citycode: 1 if ((len(matchid_location_citycode)>0) & (matchid_location_citycode == hit_matchid_location_citycode)) else 0
        - matchid_hit_score_location_depcode: 1 if (matchid_location_depcode == hit_matchid_location_depcode) else 0      
        - matchid_hit_score_location_countrycode: 1 if (matchid_location_countrycode == hit_matchid_location_countrycode) else 0   
        - matchid_hit_distance: distance(matchid_location_city_geopoint_2d,hit_matchid_location_city_geopoint_2d)
        - matchid_hit_score_location_distance: 0 if (matchid_hit_distance == "") else round(100*40/(40+matchid_hit_distance))/100
        # - matchid_hit_score_location_global: 0.5*max(matchid_hit_score_location_citycode,matchid_hit_score_location_lv_city)+0.25*max(matchid_hit_score_location_depcode,matchid_hit_score_location_lv_department)+0.25*max(matchid_hit_score_location_countrycode,matchid_hit_score_location_lv_country)   
        - matchid_hit_score_location: 'if (matchid_location_countrycode == "FRA"):
                                        cell = round(
                                                    0.5 * max(matchid_hit_score_location_citycode,matchid_hit_score_location_citycode_history,
                                                              matchid_hit_score_location_lv_city,matchid_hit_score_location_distance)
                                                    + 0.5 * matchid_hit_score_location_depcode
                                                  ,2)
                                      else: 
                                        cell = round(
                                                    0.5 * max(matchid_hit_score_location_citycode,matchid_hit_score_location_citycode_history,
                                                              matchid_hit_score_location_lv_city,matchid_hit_score_location_distance)
                                                    + 0.5 *max(matchid_hit_score_location_countrycode,
                                                                matchid_hit_score_location_lv_country)
                                                  ,2)'
        #scoring date
        - matchid_hit_score_date: round(jw(matchid_date_birth_str,hit_matchid_date_birth_str)*(0.9 if re.search('0101$',matchid_date_birth_str) else 1),2) 
        - matchid_hit_score_sex: 1 if (str(matchid_sex) == str(hit_matchid_sex)) else 0  
        - matchid_hit_score: round(1.0*matchid_hit_score_name*matchid_hit_score_date*(0.2+0.8*matchid_hit_score_location)*(0.5*(1.0+matchid_hit_score_sex)),2)
        - scoring_version: str("scoring_jw")
  diff:
    steps:
      - eval:
        - matchid_hit_diff_name_last: str(" ").join(matchid_name_last) if (matchid_hit_score_name_lv_nn>0.99) else str(" ").join(matchid_name_last) +" <> "+str(" ").join(hit_matchid_name_last) 
        - matchid_hit_diff_name_first: str(" ").join(matchid_name_first) if (matchid_hit_score_name_lv_pp>0.99) else str(" ").join(matchid_name_first) +" <> "+str(" ").join(hit_matchid_name_first) 
        - matchid_hit_diff_date: matchid_date_birth_str if (matchid_date_birth_str==hit_matchid_date_birth_str) else matchid_date_birth_str +" <> "+hit_matchid_date_birth_str 
        - matchid_hit_diff_location: matchid_location_city_src + " - " + (matchid_location_citycode if (matchid_location_countrycode=="FRA") else matchid_location_countrycode)  if (matchid_hit_score_location>0.99) else matchid_location_city_src +" <> "+hit_matchid_location_city_src 
        - matchid_hit_diff_src: matchid_src if (matchid_src == hit_matchid_src) else matchid_src +" <> "+hit_matchid_src 
